"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from . import ActTypes_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AlgoControlStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _AlgoControlStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AlgoControlStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ACS_Unknown: _AlgoControlStatus.ValueType  # 0
    ACS_Off: _AlgoControlStatus.ValueType  # 1
    ACS_Manual: _AlgoControlStatus.ValueType  # 2
    ACS_Auto: _AlgoControlStatus.ValueType  # 3
class AlgoControlStatus(_AlgoControlStatus, metaclass=_AlgoControlStatusEnumTypeWrapper):
    pass

ACS_Unknown: AlgoControlStatus.ValueType  # 0
ACS_Off: AlgoControlStatus.ValueType  # 1
ACS_Manual: AlgoControlStatus.ValueType  # 2
ACS_Auto: AlgoControlStatus.ValueType  # 3
global___AlgoControlStatus = AlgoControlStatus


class _RequestType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _RequestTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RequestType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    REQ_CREATE_DIRECT_ACTION: _RequestType.ValueType  # 2
    REQ_SET_ALGO_STATUS: _RequestType.ValueType  # 4
    REQ_TERMINATE_ALGO: _RequestType.ValueType  # 5
class RequestType(_RequestType, metaclass=_RequestTypeEnumTypeWrapper):
    """Request messages are passed from client->actant and are identified by RequestType enum"""
    pass

REQ_CREATE_DIRECT_ACTION: RequestType.ValueType  # 2
REQ_SET_ALGO_STATUS: RequestType.ValueType  # 4
REQ_TERMINATE_ALGO: RequestType.ValueType  # 5
global___RequestType = RequestType


class _ResponseType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ResponseTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ResponseType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RESP_CREATE_DIRECT_ACTION: _ResponseType.ValueType  # 2
    RESP_SET_ALGO_STATUS: _ResponseType.ValueType  # 3
    RESP_TERMINATE_ALGO: _ResponseType.ValueType  # 4
class ResponseType(_ResponseType, metaclass=_ResponseTypeEnumTypeWrapper):
    """Response messages are passed from actant->client and are identified by ResponseType enum"""
    pass

RESP_CREATE_DIRECT_ACTION: ResponseType.ValueType  # 2
RESP_SET_ALGO_STATUS: ResponseType.ValueType  # 3
RESP_TERMINATE_ALGO: ResponseType.ValueType  # 4
global___ResponseType = ResponseType


class NamedInstrument(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    INSTRUMENT_FIELD_NUMBER: builtins.int
    name: typing.Text
    instrument: typing.Text
    def __init__(self,
        *,
        name: typing.Optional[typing.Text] = ...,
        instrument: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["instrument",b"instrument","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instrument",b"instrument","name",b"name"]) -> None: ...
global___NamedInstrument = NamedInstrument

class CreateDirectActionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DIRECTACTIONNAME_FIELD_NUMBER: builtins.int
    BASEINSTRUMENT_FIELD_NUMBER: builtins.int
    ADDITIONALINSTRUMENTS_FIELD_NUMBER: builtins.int
    INPUTPARAMETERS_FIELD_NUMBER: builtins.int
    ACTIONSTATUS_FIELD_NUMBER: builtins.int
    directActionName: typing.Text
    baseInstrument: typing.Text
    @property
    def additionalInstruments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedInstrument]: ...
    @property
    def inputParameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ActTypes_pb2.Property]: ...
    actionStatus: typing.Text
    def __init__(self,
        *,
        directActionName: typing.Optional[typing.Text] = ...,
        baseInstrument: typing.Optional[typing.Text] = ...,
        additionalInstruments: typing.Optional[typing.Iterable[global___NamedInstrument]] = ...,
        inputParameters: typing.Optional[typing.Iterable[ActTypes_pb2.Property]] = ...,
        actionStatus: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["actionStatus",b"actionStatus","baseInstrument",b"baseInstrument","directActionName",b"directActionName"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["actionStatus",b"actionStatus","additionalInstruments",b"additionalInstruments","baseInstrument",b"baseInstrument","directActionName",b"directActionName","inputParameters",b"inputParameters"]) -> None: ...
global___CreateDirectActionRequest = CreateDirectActionRequest

class CreateDirectActionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACTIONNAME_FIELD_NUMBER: builtins.int
    AUTOMATIONSTATUS_FIELD_NUMBER: builtins.int
    actionName: typing.Text
    automationStatus: typing.Text
    def __init__(self,
        *,
        actionName: typing.Optional[typing.Text] = ...,
        automationStatus: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["actionName",b"actionName","automationStatus",b"automationStatus"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["actionName",b"actionName","automationStatus",b"automationStatus"]) -> None: ...
global___CreateDirectActionResponse = CreateDirectActionResponse

class Request(google.protobuf.message.Message):
    """Requests are passed from client system and will contain only one of the specific requests"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUESTTYPE_FIELD_NUMBER: builtins.int
    CLIENTID_FIELD_NUMBER: builtins.int
    CREATEDIRECTACTIONREQUEST_FIELD_NUMBER: builtins.int
    ALGONAME_FIELD_NUMBER: builtins.int
    CONTROLSTATUS_FIELD_NUMBER: builtins.int
    requestType: global___RequestType.ValueType
    clientId: builtins.int
    @property
    def createDirectActionRequest(self) -> global___CreateDirectActionRequest: ...
    algoName: typing.Text
    """	e.g. NibbleTheor:D:0000002"""

    controlStatus: global___AlgoControlStatus.ValueType
    def __init__(self,
        *,
        requestType: typing.Optional[global___RequestType.ValueType] = ...,
        clientId: typing.Optional[builtins.int] = ...,
        createDirectActionRequest: typing.Optional[global___CreateDirectActionRequest] = ...,
        algoName: typing.Optional[typing.Text] = ...,
        controlStatus: typing.Optional[global___AlgoControlStatus.ValueType] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["algoName",b"algoName","clientId",b"clientId","controlStatus",b"controlStatus","createDirectActionRequest",b"createDirectActionRequest","requestType",b"requestType"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algoName",b"algoName","clientId",b"clientId","controlStatus",b"controlStatus","createDirectActionRequest",b"createDirectActionRequest","requestType",b"requestType"]) -> None: ...
global___Request = Request

class Response(google.protobuf.message.Message):
    """Responses are passed from actant system and will contain only one of the specific responses."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSETYPE_FIELD_NUMBER: builtins.int
    CLIENTID_FIELD_NUMBER: builtins.int
    OPERATIONSTATUS_FIELD_NUMBER: builtins.int
    CREATEDIRECTACTIONRESPONSE_FIELD_NUMBER: builtins.int
    ALGONAME_FIELD_NUMBER: builtins.int
    responseType: global___ResponseType.ValueType
    clientId: builtins.int
    @property
    def operationStatus(self) -> ActTypes_pb2.OperationStatus: ...
    @property
    def createDirectActionResponse(self) -> global___CreateDirectActionResponse: ...
    algoName: typing.Text
    """	e.g. NibbleTheor:D:0000002"""

    def __init__(self,
        *,
        responseType: typing.Optional[global___ResponseType.ValueType] = ...,
        clientId: typing.Optional[builtins.int] = ...,
        operationStatus: typing.Optional[ActTypes_pb2.OperationStatus] = ...,
        createDirectActionResponse: typing.Optional[global___CreateDirectActionResponse] = ...,
        algoName: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["algoName",b"algoName","clientId",b"clientId","createDirectActionResponse",b"createDirectActionResponse","operationStatus",b"operationStatus","responseType",b"responseType"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algoName",b"algoName","clientId",b"clientId","createDirectActionResponse",b"createDirectActionResponse","operationStatus",b"operationStatus","responseType",b"responseType"]) -> None: ...
global___Response = Response
