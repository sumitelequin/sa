"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Allocation(google.protobuf.message.Message):
    """Information on the automation portfolio, its subportfolios and product positions"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DISPLAYNAME_FIELD_NUMBER: builtins.int
    PORTFOLIONAME_FIELD_NUMBER: builtins.int
    PRODUCTS_FIELD_NUMBER: builtins.int
    displayName: typing.Text
    """	allocation name displayed on the GUI"""

    portfolioName: typing.Text
    """	name of the physical portfolio containing the positions"""

    @property
    def products(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """	products for which there's a position in the allocation"""
        pass
    def __init__(self,
        *,
        displayName: typing.Optional[typing.Text] = ...,
        portfolioName: typing.Optional[typing.Text] = ...,
        products: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["displayName",b"displayName","portfolioName",b"portfolioName"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["displayName",b"displayName","portfolioName",b"portfolioName","products",b"products"]) -> None: ...
global___Allocation = Allocation

class PortfolioAllocation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UNDERLYINGPRODUCT_FIELD_NUMBER: builtins.int
    AUTOMATIONPORTFOLIO_FIELD_NUMBER: builtins.int
    ALLOCATIONS_FIELD_NUMBER: builtins.int
    underlyingProduct: typing.Text
    """	product group of the automation portfolio"""

    automationPortfolio: typing.Text
    """	name of portfolio"""

    @property
    def allocations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Allocation]:
        """	list of physical subportfolios (only set in multi-account mode)"""
        pass
    def __init__(self,
        *,
        underlyingProduct: typing.Optional[typing.Text] = ...,
        automationPortfolio: typing.Optional[typing.Text] = ...,
        allocations: typing.Optional[typing.Iterable[global___Allocation]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["automationPortfolio",b"automationPortfolio","underlyingProduct",b"underlyingProduct"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allocations",b"allocations","automationPortfolio",b"automationPortfolio","underlyingProduct",b"underlyingProduct"]) -> None: ...
global___PortfolioAllocation = PortfolioAllocation
