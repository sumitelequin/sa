"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class OperationStatus(google.protobuf.message.Message):
    """Operation status is passed from actant to client system and it describes the outcome of the
    requested operation identified by the clientId. A failure is identified by the existence
    of an error message
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    ERRORSTATUSFLAGS_FIELD_NUMBER: builtins.int
    errorMessage: typing.Text
    errorStatusFlags: builtins.int
    """	bitmask to transport additional informatino"""

    def __init__(self,
        *,
        errorMessage: typing.Optional[typing.Text] = ...,
        errorStatusFlags: typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["errorMessage",b"errorMessage","errorStatusFlags",b"errorStatusFlags"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errorMessage",b"errorMessage","errorStatusFlags",b"errorStatusFlags"]) -> None: ...
global___OperationStatus = OperationStatus

class Property(google.protobuf.message.Message):
    """Generic name value pair to use for property bags"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: typing.Text
    value: typing.Text
    def __init__(self,
        *,
        name: typing.Optional[typing.Text] = ...,
        value: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["name",b"name","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","value",b"value"]) -> None: ...
global___Property = Property

class DoubleProperty(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: typing.Text
    value: builtins.float
    def __init__(self,
        *,
        name: typing.Optional[typing.Text] = ...,
        value: typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["name",b"name","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","value",b"value"]) -> None: ...
global___DoubleProperty = DoubleProperty

class ScaledBBO(google.protobuf.message.Message):
    """	the message has been renamed to indicate that it contains scaled 32 bit quantities"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SCALEDNBID_FIELD_NUMBER: builtins.int
    BID_FIELD_NUMBER: builtins.int
    ASK_FIELD_NUMBER: builtins.int
    SCALEDNASK_FIELD_NUMBER: builtins.int
    scaledNBid: builtins.int
    """	scaled quantity"""

    Bid: builtins.int
    """	price"""

    Ask: builtins.int
    """	price"""

    scaledNAsk: builtins.int
    """	scaled quantity"""

    def __init__(self,
        *,
        scaledNBid: typing.Optional[builtins.int] = ...,
        Bid: typing.Optional[builtins.int] = ...,
        Ask: typing.Optional[builtins.int] = ...,
        scaledNAsk: typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Ask",b"Ask","Bid",b"Bid","scaledNAsk",b"scaledNAsk","scaledNBid",b"scaledNBid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Ask",b"Ask","Bid",b"Bid","scaledNAsk",b"scaledNAsk","scaledNBid",b"scaledNBid"]) -> None: ...
global___ScaledBBO = ScaledBBO

class UniqueId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    CHANGECOUNT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    id: builtins.int
    changeCount: builtins.int
    """	version number"""

    name: typing.Text
    def __init__(self,
        *,
        id: typing.Optional[builtins.int] = ...,
        changeCount: typing.Optional[builtins.int] = ...,
        name: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["changeCount",b"changeCount","id",b"id","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["changeCount",b"changeCount","id",b"id","name",b"name"]) -> None: ...
global___UniqueId = UniqueId

class AbsoluteLimit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MINIMUM_FIELD_NUMBER: builtins.int
    MAXIMUM_FIELD_NUMBER: builtins.int
    minimum: builtins.float
    maximum: builtins.float
    def __init__(self,
        *,
        minimum: typing.Optional[builtins.float] = ...,
        maximum: typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["maximum",b"maximum","minimum",b"minimum"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["maximum",b"maximum","minimum",b"minimum"]) -> None: ...
global___AbsoluteLimit = AbsoluteLimit

class PercentLimit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PERCENTAGE_FIELD_NUMBER: builtins.int
    MINIMUM_FIELD_NUMBER: builtins.int
    MAXIMUM_FIELD_NUMBER: builtins.int
    percentage: builtins.float
    minimum: builtins.float
    maximum: builtins.float
    def __init__(self,
        *,
        percentage: typing.Optional[builtins.float] = ...,
        minimum: typing.Optional[builtins.float] = ...,
        maximum: typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["maximum",b"maximum","minimum",b"minimum","percentage",b"percentage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["maximum",b"maximum","minimum",b"minimum","percentage",b"percentage"]) -> None: ...
global___PercentLimit = PercentLimit
